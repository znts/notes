rsync同步操作
一台机器上两个文件夹的同步或者集群之间的同步
• 命令用法
– rsync  [选项...]   源目录    目标目录
• 同步与复制的差异
– 复制:完全拷贝源到目标
– 同步:增量拷贝,只传输变化过的数据
• rsync操作选项
 – -n:测试同步过程,不做实际修改
 – --delete:删除目标文件夹内多余的文档
 – -a:归档模式,相当于-rlptgoD
 – -v:显示详细操作信息
 – -z:传输过程中启用压缩/解压

 – -r :递归，包括目录/子目录及所有文件
 – -l :保留符号链接文件（如快捷方式）
 – -p  -t:保留文件的权限 时间标记
 – -o  -g:保留文件的属主/属组标记
 – -D :保留设备文件及其他特殊文件

实现远程同步
 rsync+ssh

• 与远程的 SSH目录保持同步
– 下行:rsync [...]  user@host:远程目录    本地目录
– 上行:rsync [...]  本地目录   user@host:远程目录

远程实时同步
一、部署公钥、私钥  实现ssh无密码认证

1.A主机生成 公钥、私钥
# ssh-keygen    #一路回车
2.公钥、私钥生成的位置
# ls /root/.ssh/
3.传递公钥到B主机
# ssh-copy-id  user@x.x.x.x

二、如何知道目录内容的变化，监控目录内容的变化
1.下载  tools.tar.gz  tar包 
2.A主机安装inotify-tools工具，实现监控目录内容的变化
       (源码编译安装即可)
     默认安装目录  /usr/local/bin/inotifywait       echo $PATH
  
inotifywait监控
• 基本用法
– inotifywait [选项] 目标文件夹
• 常用命令选项
– -m,持续监控(捕获一个事件后不退出)
– -r,递归监控、包括子目录及文件
– -q,减少屏幕输出信息 （ -qq  #两个q没有输出信息）
– -e,指定监视的 modify、move、create、delete、attrib 等事件类别

三、书写Shell脚本
    #!/bin/bash
    #后台持续监控并同步nginx服务的web页面
    mulu=”/usr/local/nginx/html/”
    myrsync=”rsync --delete -az $mulu 	root@201.1.2.200:/usr/local/nginx/html”
    while inotifywait -rqq $mulu
    do
           $myrsync 
    done &






























